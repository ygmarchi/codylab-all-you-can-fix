logging:
  pattern:
    level: '%5p [${spring.application.name:},%X{traceId:-},%X{spanId:-}]'
  include-application-name: false
  level:
    org.zalando.logbook: trace
logbook:
  format:
    style: http
  predicate:
    include:
      - path: "/api/**"
spring:
  application:
    name: order-service
  profiles:
    group:
      'dev': 'local'
  datasource:
    url: jdbc:postgresql://localhost:5432/order_service
    username: order_service
    password: order_service
  docker:
    compose:
      file: ./order-service/compose.yml
      start:
        skip: never
      readiness:
        timeout: 1m
  jpa:
    open-in-view: true
    hibernate:
      ddl-auto: validate
      properties.hibernate.jdbc.batch_size: 100
  mvc:
    problemdetails:
      enabled: true
  kafka:
    bootstrap-servers: localhost:9094
    properties:
      spring.json.trusted.packages: "*"
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
      batch-size: 50000
      linger.ms: 1000
    consumer:
      group-id: order-service
      key-deserializer: org.apache.kafka.common.serialization.LongDeserializer
      value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
      fetch.min.bytes: 50000
      fetch.max.wait.ms: 1000
  web:
    resources:
      static-locations: classpath:/api
  security:
    oauth2:
      client:
        registration:
          order-service-client:
            clientId: order-service
            client-secret: YTVanMprszT71YtyO1x5a8Y0bqLS4a27
            provider: keycloak
            authorization-grant-type: client_credentials
        provider:
          keycloak:
            issuer-uri: http://localhost:9080/realms/intesys-all-you-can-fix
management:
  endpoints:
    web:
      exposure:
        include: "*"
  endpoint:
    health:
      show-details: always
application:
  oauth2-shipping-service-registration-id: order-service-client
  shipping-service-base-url: http://localhost:8081
